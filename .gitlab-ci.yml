include:
  - remote: 'https://gitlab.com/cscs-ci/recipes/-/raw/master/templates/v2/.ci-ext.yml'

.container-builder-k8s:
  tags: [rosa-k8s-development]
  image: docker.io/finkandreas/cicd-ext-k8s-container-image-builder:podman-4.3.1
  script:
    - build_new_container

stages:
  - build_base
  - build
  - run

variables:
  # CI_PROJECT_NAME==docker-jfrog - 1:0 is the version tag, if you want to tag each run, also use CI_COMMIT_SHA
  PERSIST_IMAGE_NAME: $CSCS_REGISTRY_PATH/subdirectory/my_cool_image:$CI_COMMIT_SHA

build baseimage:
  extends: .container-builder-k8s
  stage: build_base
  before_script:
    - DOCKER_TAG=`sha256sum docker/Dockerfile.base | head -c 16`
    - export PERSIST_IMAGE_NAME=$CSCS_REGISTRY_PATH/baseimage/cpu_base:$DOCKER_TAG
    - echo "BASE_IMAGE=$PERSIST_IMAGE_NAME" >> build.env
  artifacts:
    reports:
      dotenv: build.env
  variables:
    DOCKERFILE: docker/Dockerfile.base


build:
  extends: .container-builder-k8s
  stage: build
  before_script:
    - env
  variables:
    DOCKERFILE: docker/Dockerfile.ubuntu
    DOCKER_BUILD_ARGS: '["BASE_IMAGE=$BASE_IMAGE"]'
    GIT_SUBMODULE_STRATEGY: recursive


run:
  extends: .container-runner-hohgant
  stage: run
  image: ${PERSIST_IMAGE_NAME}
  script:
    - echo $CSCS_SKIP_GIT_CLONE_SARUS_RUNNER
    - /opt/hello/bin/hello
  variables:
    CSCS_SKIP_GIT_CLONE_SARUS_RUNNER: 'NO'
    CSCS_RUN_BARE_METAL: 'YES'
    USE_MPI: 'YES'
    SLURM_JOB_NUM_NODES: 1
    SLURM_CONSTRAINT: cpu
    SLURM_NTASKS: 2

run test:
  extends: .container-runner-hohgant
  stage: build_base
  image: quay.io/podman/stable:latest
  script:
    - curl -v "https://cicd-ext-mw.cscs.ch/cigodevel/credentials/get?token=$CI_JOB_TOKEN&creds=sshkey,spack_buildcache_storage"
    - curl -v "https://gitlab.com/api/v4/job?job_token=$CI_JOB_TOKEN"
    - curl -v "https://cicd-ext-mw.cscs.ch/cigodevel/credentials/get?token=$CI_JOB_TOKEN&creds=sshkey,spack_buildcache_storage"
    - echo "asdf"
    - sleep 3600
  variables:
    SLURM_JOB_NUM_NODES: 1
    PULL_IMAGE: 'YES'
    SLURM_PARTITION: normal

# clone:
#   tags: ['docker_jfrog']
#   stage: run
#   script:
#     - 'true'
#   when: manual
#   variables:
#     CLONE_IMAGE_NAME: finkandreas/skopeo_copy_test:1.0
#     CLONE_REGISTRY_USER: finkandreas
#     RUNNER_MODE: CLONE_IMAGE
